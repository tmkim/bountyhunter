# Generated by Django 5.2.6 on 2025-10-31 22:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OnePieceSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'one_piece_set',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OnePieceCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=0)),
                ('foil_type', models.CharField(default='Normal', max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('tcgplayer_url', models.URLField(blank=True, null=True)),
                ('market_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('rarity', models.CharField(blank=True, max_length=100, null=True)),
                ('card_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('card_type', models.CharField(blank=True, max_length=100, null=True)),
                ('life', models.IntegerField(blank=True)),
                ('power', models.IntegerField(blank=True)),
                ('subtype', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute', models.CharField(blank=True, max_length=50, null=True)),
                ('cost', models.IntegerField(blank=True)),
                ('counter', models.IntegerField(blank=True)),
                ('last_update', models.DateField()),
            ],
            options={
                'db_table': 'one_piece_card',
                'unique_together': {('product_id', 'foil_type')},
            },
        ),
        migrations.CreateModel(
            name='OnePieceCardHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_id', models.IntegerField()),
                ('history_date', models.DateField()),
                ('market_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'db_table': 'one_piece_card_history',
                'unique_together': {('card_id', 'history_date')},
            },
        ),
        migrations.CreateModel(
            name='OnePieceDeck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('leader', models.CharField(max_length=255)),
                ('user', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'one_piece_deck',
                'indexes': [models.Index(fields=['user'], name='ix_deck_user'), models.Index(fields=['leader'], name='ix_deck_leader')],
            },
        ),
        migrations.CreateModel(
            name='OnePieceDeckCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_foil', models.CharField(max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decks', to='bounty_api.onepiececard')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='bounty_api.onepiecedeck')),
            ],
            options={
                'db_table': 'one_piece_deck_card',
                'unique_together': {('deck', 'card')},
            },
        ),
    ]
